import ttkbootstrap as ttk
from ttkbootstrap.constants import *
from tkinter import messagebox
from models import User, mysql_db
from export_utils import export_clients, export_all_to_json
from reports_utils import top_agents_report, monthly_revenue_report

class MainApp:
    def __init__(self, master, user):
        self.master = master
        self.master.title("–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ ‚Äî –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        self.master.geometry("400x500")
        self.user = user

        ttk.Label(master, text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.username}!", font=("Arial", 14)).pack(pady=10)
        ttk.Label(master, text=f"–†–æ–ª—å: {user.role}", font=("Arial", 10)).pack(pady=5)

        if user.role == 'admin':
            self.add_button("üë• –ö–ª–∏–µ–Ω—Ç—ã", self.open_clients, "primary")
            self.add_button("üßë‚Äçüíº –ê–≥–µ–Ω—Ç—ã", self.open_agents, "primary")

        self.add_button("üèò –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", self.open_realestate, "secondary")
        self.add_button("ü§ù –°–¥–µ–ª–∫–∏", self.open_deals, "secondary")

        if user.role == 'admin':
            self.add_button("üìÑ –î–æ–≥–æ–≤–æ—Ä—ã", self.open_contracts, "secondary")
            self.add_button("üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", self.export_data, "info")
            self.add_button("üìà –û—Ç—á—ë—Ç: –¢–æ–ø –∞–≥–µ–Ω—Ç–æ–≤", self.show_top_agents, "warning")
            self.add_button("üìä –û—Ç—á—ë—Ç: –ê—Ä–µ–Ω–¥–∞/–ü—Ä–æ–¥–∞–∂–∏", self.show_monthly_revenue, "warning")

        self.add_button("üö™ –í—ã—Ö–æ–¥", master.quit, "danger")

    def add_button(self, text, command, style):
        ttk.Button(self.master, text=text, width=30, bootstyle=style, command=command).pack(pady=5)

    def open_clients(self):
        from clients_gui import ClientsGUI
        top = ttk.Toplevel(self.master)
        ClientsGUI(top)

    def open_agents(self):
        from agents_gui import AgentsGUI
        top = ttk.Toplevel(self.master)
        AgentsGUI(top)

    def open_realestate(self):
        from realestate_gui import RealEstateGUI
        top = ttk.Toplevel(self.master)
        RealEstateGUI(top)

    def open_deals(self):
        from deals_gui import DealsGUI
        top = ttk.Toplevel(self.master)
        DealsGUI(top)

    def open_contracts(self):
        from contracts_gui import ContractsGUI
        top = ttk.Toplevel(self.master)
        ContractsGUI(top)

    def export_data(self):
        import os
        if not os.path.exists("exports"):
            os.makedirs("exports")
        try:
            export_clients()
            export_all_to_json()
            messagebox.showinfo("–£—Å–ø–µ—Ö", "–§–∞–π–ª—ã —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ –ø–∞–ø–∫—É 'exports'.")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: {e}")

    def show_top_agents(self):
        try:
            df = top_agents_report()
            win = ttk.Toplevel(self.master)
            win.title("–¢–æ–ø –∞–≥–µ–Ω—Ç–æ–≤")
            tree = ttk.Treeview(win, columns=list(df.columns), show="headings")
            for col in df.columns:
                tree.heading(col, text=col)
            for _, row in df.iterrows():
                tree.insert("", "end", values=list(row))
            tree.pack(fill="both", expand=True)
            ttk.Label(win, text="–û—Ç—á—ë—Ç —Ç–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ exports/top_agents.xlsx").pack(pady=5)
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –≤ –æ—Ç—á—ë—Ç–µ: {e}")

    def show_monthly_revenue(self):
        try:
            df = monthly_revenue_report()
            win = ttk.Toplevel(self.master)
            win.title("–û—Ç—á—ë—Ç: –î–æ—Ö–æ–¥ –ø–æ –º–µ—Å—è—Ü–∞–º")
            tree = ttk.Treeview(win, columns=list(df.columns), show="headings")
            for col in df.columns:
                tree.heading(col, text=col)
            for _, row in df.iterrows():
                tree.insert("", "end", values=list(row))
            tree.pack(fill="both", expand=True)
            ttk.Label(win, text="–û—Ç—á—ë—Ç —Ç–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ exports/monthly_revenue.xlsx").pack(pady=5)
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –≤ –æ—Ç—á—ë—Ç–µ: {e}")


if __name__ == '__main__':
    mysql_db.connect()
    user = User.get(User.username == "admin1")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    app = ttk.Window(themename="superhero")  # –ú–æ–∂–Ω–æ: flatly, minty, cosmo, journal, darkly, etc.
    MainApp(app, user)
    app.mainloop()
